services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    volumes:
      - /home/ubuntu/zookeeper/data:/opt/zookeeper-3.4.13/data
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_NAME} # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://${HOST_NAME}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ubuntu/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    expose:
        - '3306'
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    build:
      context: ../receiver
    # image: deployment-receiver
    ports:
      - "8080:8080"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/receiver:/config
      - /home/ubuntu/logs:/logs
    depends_on:
      - kafka

  storage:
    build:
      context: ../storage
    # image: deployment-storage
    ports:
      - "8090:8090"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/storage:/config
      - /home/ubuntu/logs:/logs
    depends_on:
      - kafka
      - db

  processing:
    build:
      context: ../processing
    # image: deployment-processing
    ports:
      - "8100:8100"
    network_mode: "host"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/processing:/config
      - /home/ubuntu/logs:/logs
      - processing-db:/data
    depends_on:
      - storage

  analyzer:
    build:
      context: ../analyzer
    # image: deployment-analyzer
    ports:
      - "8110:8110"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/analyzer:/config
      - /home/ubuntu/logs:/logs
    depends_on:
      - kafka

  dashboard:
    build:
      context: ../dashboard-ui
    # image: deployment-dashboard
    ports:
    - "3000:3000"
    depends_on:
    - "processing"
    - "analyzer"

volumes:
  my-db:
  processing-db:

